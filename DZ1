'number' + 23 + 32 // числа приравняются к строке и получится number2332
41 + 1 + 'number' // сначала будет действие 41+1 это 42 и число добавится к строке,результат 42number
null + 1 // нул будет 0 +1 результат 1
'five' + + 'two' // наверное будет nan, так как сложить строки можно,но вот с 2 плюсами хз
2 && 7     // оба значиния будут тру,поэтому выведется последнее 7
+'40' + +'2'; // 40 преобразуется в число как и 2 унарным оператором,результат будет 40+2=42
'10' - 5 === 6; // 10 преобразуетс в число, 5 === 6,результат будет false
true + false // преобразуются в числа 1+0=1,результат 1
'4px' - 3 // так как в строке помимо цифр есть еще и буквы,то скорее всего математическая операция не может быть выполнена,результат nan
'4' - 3   // строка преобразуется в число 4,поэтому результат будет 1
'2' + 3 ** 2; // сначала возведется 3 во вторую степень= 9, потом строка 2 добавит к себе 9,результат строка 29
12 / '6'   // 12 делить на 6,строка преобразуется в число,результат будет 2
23 + 42 + 'number' // сначала будет действие 23+42,потому что стоит первым,потом результат сложения добавится к строке,результат 55number
'10' + (5 === 6); // сначала выполнится действие в скобках,результатом которого будет false, потом так как строка стоит впереди к ней добавится false,результат 10false
'number' + 15 + 3 // так как строка находится впереди,к ней добавятся цифры,результат будет number153
undefined + 1; // наверное будет nan,так как хз как выполнить эту математическую процедуру
'true' == true    // первая строка будет true,потому что она не пуста и результат будет true
false == 'false' // вторая строка будет true, результат будет false,потому что false не равно true
null == ''      // нул это фолс и пустая строка это тоже фолс,результат будет true
3 ** (9 / 3);   // сначала в скобках (9\3) будет 3, 3 в 3 степени = 27
!!'false' == !!'true' // !! вернет тоже самое значиние что и было, а false не равно тру,поэтому результат будет false
0 || '0' && 1        // сначала будет &&, строка не пустая и 1 это все тру, возвращает последнее значение 1, далее у нас 0 это фолс а 1 это тру,поэтому результат будет 1
1 < 2 < 3 // тут скорее всего двойку сравнит с боковыми цифрами,2 больше 1,но 2 меньше 3,все сходится поэтому true
'foo'+ + +'bar' // наверное будет nan, так как сложить строки можно,но вот с 2 плюсами хз
3 ** 2 / 3; // 3 во второй степени это 9 и 9 делить на 3 будет 3
1 < 2 > 3 // тут будет false,потому что 2 больше 1,но 2 не больше чем 3
(+null == false) < 1; // +null переведет в число 0,0 == фолс будет тру,и далее сравнит 0 < 1, результат будет true
false && true || true   // сначала получится фолс,далее сравнит фалс с тру,результат будет true
false && (true || true); // первое действие в скобках вернет тру,далее false && true результат будет false
(+null == false) < 1 ** 5; // +null переведет в число 0,0 == фолс будет тру,далее 1 в пятой степени это будет 1,результат true
